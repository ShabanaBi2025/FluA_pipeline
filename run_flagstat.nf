// run_flagstat.nf
// This workflow runs Samtools flagstat on all aligned BAM files.

// === INCLUDE SAMTOOLS PROCESS ===
process SAMTOOLS_FLAGSTAT {
    // Specify the Conda environment to use
    conda 'envs/environment.yml'

    // Define the inputs for the process
    input:
    tuple val(strain_id), val(sample_id), path(bam_file)

    // Define the output files generated by the process
    output:
    path("${strain_id}_${sample_id}.flagstat"), emit: report

    // The script block specifies the command to execute
    script:
    """
    samtools flagstat ${bam_file} > ${strain_id}_${sample_id}.flagstat
    """
}

// === WORKFLOW ===
workflow {

    // Get the aligned BAM files from your main workflow's results directory
    Channel
        // CORRECTED: The glob pattern is now more specific to find files in sub-subdirectories.
        .fromPath('results/aligned/*/*/*.sorted.bam')
        .map { file ->
            // Extract the strain ID and sample ID from the file path
            def strain_id = file.parent.parent.name
            def sample_id = file.parent.name
            return tuple(strain_id, sample_id, file)
        }
        .set { aligned_files_ch }

    // Run the SAMTOOLS_FLAGSTAT process on the aligned BAM files
    SAMTOOLS_FLAGSTAT(aligned_files_ch)
}
